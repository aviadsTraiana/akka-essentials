//akka {
//  loglevel = DEBUG
//}

mySpecialConfig {
  akka {
    loglevel = INFO
  }
}
# timed assertions test config
specialTimedAssertionsConfig {
  akka.test.single-expect-default = 2s
}

# intercepting log messages test
interceptingLogMessages {
  akka {
    loggers = ["akka.testkit.TestEventListener"]
    test {
      filter-leeway = 5s
    }
  }
}

# routers demo
routersDemo { //custome name
  akka {
    actor.deployment { //not custom
      /poolMaster2 { //custom name
        router = round-robin-pool
        nr-of-instances = 5
      }

      /groupMaster2 {
        router = round-robin-group
        routees.paths = ["/user/slave_1","/user/slave_2","/user/slave_3","/user/slave_4","/user/slave_5"]
      }
    }
  }
}

# dispatchers demo
my-dispatcher {
  type = Dispatcher # PinnedDispatcher, CallingThreadDispatcher
  executor = "thread-pool-executor" // can also be fork join if we want
  thread-pool-executor {
    fixed-pool-size = 1 //pool size - single threaded dispatcher
  }
  throughput = 30 //can get 30 messages before sending message to another actor
}

dispatchersDemo {
  akka.actor.deployment {
    /rtjvm {
      dispatcher = my-dispatcher
    }
  }
}

# mailboxes demo
mailboxesDemo {
  support-ticket-dispatcher {
    mailbox-type = "part5infra.Mailboxes$SupportTicketPriorityMailbox" //fqn of class
  }

  control-mailbox {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }

  akka.actor.deployment {
    /altControlAwareActor {
      mailbox = control-mailbox
    }
  }
}